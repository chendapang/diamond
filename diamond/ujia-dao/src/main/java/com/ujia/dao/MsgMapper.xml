<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ujia.dao.MsgMapper" >
  <resultMap id="BaseResultMap" type="com.ujia.vo.MsgVo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="author_avatar" property="authorAvatar" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="ref" property="ref" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ujia.vo.MsgVo" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, open_id, author_name, author_avatar, created_at, ref
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujia_msg
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ujia_msg
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ujia.model.Msg" >
    insert into ujia_msg (id, open_id, author_name, 
      author_avatar, created_at, ref, 
      content)
    values (#{id,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{authorName,jdbcType=VARCHAR}, 
      #{authorAvatar,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{ref,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ujia.model.Msg" >
    insert into ujia_msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="authorName != null" >
        author_name,
      </if>
      <if test="authorAvatar != null" >
        author_avatar,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="ref != null" >
        ref,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="authorAvatar != null" >
        #{authorAvatar,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="ref != null" >
        #{ref,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ujia.model.Msg" >
    update ujia_msg
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="authorAvatar != null" >
        author_avatar = #{authorAvatar,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="ref != null" >
        ref = #{ref,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ujia.model.Msg" >
    update ujia_msg
    set open_id = #{openId,jdbcType=VARCHAR},
      author_name = #{authorName,jdbcType=VARCHAR},
      author_avatar = #{authorAvatar,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      ref = #{ref,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ujia.model.Msg" >
    update ujia_msg
    set open_id = #{openId,jdbcType=VARCHAR},
      author_name = #{authorName,jdbcType=VARCHAR},
      author_avatar = #{authorAvatar,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      ref = #{ref,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <select id="getMsgListByOpenId" resultMap="BaseResultMap"
		parameterType="String">
		 select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ujia_msg
    where open_id = #{openId,jdbcType=VARCHAR}
	</select>
</mapper>